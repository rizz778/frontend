{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUVIR ARORA\\\\OneDrive\\\\Documents\\\\web dev\\\\MERN Projects\\\\e-commerce\\\\frontend\\\\src\\\\context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index <= 300; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [allProducts, setAllProducts] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAllProducts(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          'auth-token': localStorage.getItem('auth-token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n  }, []);\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          'auth-token': localStorage.getItem('auth-token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          'auth-token': localStorage.getItem('auth-token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = allProducts.find(product => product.id === Number(item));\n        if (itemInfo) {\n          totalAmount += itemInfo.new_price * cartItems[item];\n        }\n      }\n    }\n    return totalAmount;\n  };\n  const contextValue = {\n    getTotalCartAmount,\n    allProducts,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"YX+8wY8eGZHNuEMkqAkpFHB9bgI=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","allProducts","setAllProducts","cartItems","setCartItems","fetch","then","response","json","data","localStorage","getItem","method","headers","body","JSON","stringify","addToCart","itemId","prev","console","log","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SUVIR ARORA/OneDrive/Documents/web dev/MERN Projects/e-commerce/frontend/src/context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index <= 300; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [allProducts, setAllProducts] = useState([]);\r\n    const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/allproducts')\r\n            .then((response) => response.json())\r\n            .then((data) => setAllProducts(data));\r\n\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/getcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'auth-token': localStorage.getItem('auth-token'),\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({})\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => setCartItems(data));\r\n        }\r\n    }, []);\r\n\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'auth-token': localStorage.getItem('auth-token'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ itemId })\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => console.log(data));\r\n        }\r\n    }\r\n\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/removefromcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'auth-token': localStorage.getItem('auth-token'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ itemId })\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => console.log(data));\r\n        }\r\n    }\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                let itemInfo = allProducts.find((product) => product.id === Number(item));\r\n                if (itemInfo) {\r\n                    totalAmount += itemInfo.new_price * cartItems[item];\r\n                }\r\n            }\r\n        }\r\n        return totalAmount;\r\n    }\r\n\r\n    const contextValue = { getTotalCartAmount, allProducts, cartItems, addToCart, removeFromCart };\r\n    \r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}